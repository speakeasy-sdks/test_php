<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace my_workspace\Updater\Models\Shared;


class Deal
{
	#[\JMS\Serializer\Annotation\SerializedName('dealId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $dealId;
    
    /**
     * Maximum amount that the buyer can buy in order to take advantage of this deal. This is presented as cents.
     * 
     * @var ?int $maximumAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('maximumAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maximumAmount = null;
    
    /**
     * Maximum units that the buyer must buy in order to take advantage of this deal.
     * 
     * @var ?int $maximumUnits
     */
	#[\JMS\Serializer\Annotation\SerializedName('maximumUnits')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maximumUnits = null;
    
    /**
     * Minimum amount that the buyer must buy in order to take advantage of this deal. This is presented as cents.
     * 
     * @var ?int $minimumAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('minimumAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minimumAmount = null;
    
    /**
     * Minimum units that the buyer must buy in order to take advantage of this deal.
     * 
     * @var ?int $minimumUnits
     */
	#[\JMS\Serializer\Annotation\SerializedName('minimumUnits')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minimumUnits = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('moreInfo')]
    #[\JMS\Serializer\Annotation\Type('my_workspace\Updater\Models\Shared\DealMoreInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DealMoreInfo $moreInfo = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('productId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $productId;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<my_workspace\Updater\Models\Shared\DealType>')]
    public DealType $type;
    
    /**
     * Represent the a value in the units provided on type field. If type is 'percentage', this represents the percentage of the discount to apply when this deal is used. In case of type being 'percentage', this is presented in the hundreths (2005 is the same of 20.05%). In case of type being 'amount', this is presented as cents (2005 is the same of 20.05â‚¬, if the unit used is euros).
     * 
     * @var int $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $value;
    
	public function __construct()
	{
		$this->dealId = "";
		$this->maximumAmount = null;
		$this->maximumUnits = null;
		$this->minimumAmount = null;
		$this->minimumUnits = null;
		$this->moreInfo = null;
		$this->name = "";
		$this->productId = "";
		$this->type = \my_workspace\Updater\Models\Shared\DealType::Percentage;
		$this->value = 0;
	}
}
